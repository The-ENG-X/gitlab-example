name: ci-cd-pipeline

on: [push]

env:
    IMAGE_NAME: theengx/flask-github
    IMAGE_TAG: 2.0.0

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.12'
            - name: install packages
              run: |
                python -m pip install --upgrade pip
                pip install -Ur src/requirements.txt
            - name: run tests
              run: pytest -v src
    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v4
            - name: set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and push
              run: |
                docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}.
                docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
    terraform:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4
            - name: set up Terraform
              uses: hashicorp/setup-terraform@v2
            - name: setup AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
               aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
               aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
            - uses: actions/checkout@v4
            - uses: hashicorp/setup-terraform@v3
            - name: Terraform Init
              run: terraform init
            - name: Terraform apply
              run: terraform apply
